operator = _{ equals | notequals | and | or }
equals = { "==" }
notequals = { "!=" }
and = { "&&" }
or = { "||" }

string = ${ "\'" ~ inner ~ "\'" }
inner = @{ char* }
char = {
!("\'" | "\\") ~ ANY
| "\\" ~ ("\'" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
| "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
num = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }
int = { ("+" | "-")? ~ ASCII_DIGIT+ }

bool = { "true" | "false" }


expr = { single_bin_expr | bin_expr | ternary }
single_bin_expr = { "(" ~ expr ~ ")" }
literal = { string | num | bool }
ternary = { "if" ~ expr ~ "then" ~ expr ~ "else" ~ expr }
bin_expr = { (single_bin_expr | literal) ~ (operator ~ expr)* }

// expr = { literal | "(" ~ literal ~ ")" | bin_op | if_else }
// literal = { string | num | bool }
// if_else = { "if" ~ expr ~ "then" ~ expr ~ "else" ~ expr }
// bin_op = { "(" ~ expr ~ operator ~ expr ~ ")" }


expression = _{ SOI ~ expr ~ EOI }

WHITESPACE = _{ " " | "\t" }
